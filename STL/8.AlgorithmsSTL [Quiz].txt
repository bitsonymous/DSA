Quiz questions

0. Title: Algorithms STL#1
Description: Which of following is true about the function <strong>find(beginIterator, endIterator, val)</strong> :  


0.Returns an iterator pointing to 1st element equal to val, if such element is found.
1.Returns an iterator equal to "endIterator" if no such element is found.
2.Time complexity is atmost O(DISTANCE(beginIterator, endIterator))
3.All of the above.



1. Title: Algorithms STL#2
Description: Choose the correct output and time complexity for the following code :
<pre>
list< int > myList = { 2, 6, 12, 13, 15, 18, 20};
cout << binary_search(myList.begin(), myList.end(), 20) ;
</pre>

0.Output is 20 and time complexity is Linear in size of the list.
1.Output is 1 and time complexity is Linear in size of the list.
2.Output is 20 and time complexity is Logarithmic in size of the list.
3.Output is 1 and time complexity is Logarithmic in size of the list.



2. Title: Algorithms STL#3
Description: For the following code : 

<pre>
vector< int > data = { 1, 1, 2, 3, 3, 3, 3, 4, 4, 4, 5, 5, 6 };
auto lower = std::lower_bound(data.begin(), data.end(), 4);
auto upper = std::upper_bound(data.begin(), data.end(), 4);
for(auto it = lower; it != upper; it++)
cout << *it << ' '; 
</pre>
Choose the correct output.


0.3 4 4 4 5
1.4
2.4 4 4
3.4 4 4 5



3. Title: Algorithms STL#4
Description: What is the data type that should be returned by a comparator? 
If we would like to see item1 before item2 in our final sorted ordering then compare(item1, item2) should return what value?


0.bool and 0
1.int and any positive number
2.bool and 1
3.int and any number but 0.



4. Title: Algorithms STL#5
Description: Given the following code snippet :
<pre>

bool comp(string s1, string s2)
{
    if(s1.length() < s2.length())
        return 1;
    else if(s1.length() > s2.length())
        return 0;
    else return s1 < s2;
}

vector< string > data = {"b", "a", "c", "abc", "bca", "xy"};
sort(data.begin(), data.end(), comp);
for(string item : data)
        cout << item << " ";
 </pre>
Choose the correct output : 


0.xy bca abc c b a
1.a b c xy abc bca
2.a b c abc bca xy
3.b a c xy abc bca



5. Title: Algorithms STL#6
Description: We wish to design a data type that can be used to hold a string, an integer, a double and a pointer to an integer.

Which of the following can be used as an alternative to above required data type.


0.typedef pair< string, pair< int, pair< double, int * > > > myDataType
1.typedef pair< string, pair< int, pair< int, int * > > > myDataType;
2.typedef pair< string, pair< int*, double > > myDataType;
3.None of these.



6. Title: Algorithms STL#7
Description:  The C++ inbuilt sort function only uses the :

0.Merge Sort algorithm
1.Quick Sort algorithm
2.HeapSort algorithm
3.None of these.



7. Title: Algorithms STL#8
Description: Study the following code snippet:
<pre>
vector< int > data = {100, 142, 138, 96, 32, 149};
swap(data[2], data[5]);
int val1 = *max_element(data.begin(), data.begin() +3);
int val2 = *max_element(data.begin()+3,data.end());
cout<< min(val1, val2);
</pre>
Will the above code compile?
If yes then what is the output?



0.swap is not a defined function so an error is thrown.
1.output is 142, no error is thrown.
2.max_element is not a defined function so an error is thrown.
3.output is 138, no error is thrown.



8. Title: Algorithms STL#9
Description: A student just learnt the reverse() function in c++ STL.
He writes the following algorithm to check if a given string S is a palindrome.

	bool isPalindrome(string& s)
		string rev = s
		reverse(rev.begin(), rev.end())
		return s == rev

Is the algorithm correct?
What is the space and time complexity?


0.No syntactical error but algorithm just does not work on all possible range of inputs.
1.Algorithm is correct and uses O(N) time and O(1) space.
2.Syntactical error, correction in statement 2 : rev = reverse(rev.begin(), rev.end())
3.Algorithm is correct and uses O(N) time and O(N) extra space.



9. Title: Algorithms STL#10
Description: Given the following code snippet :
<pre>
string s = "bca";
 
   do {
        cout << s << ' ';
    } while(next_permutation(s.begin(), s.end()));

 cout << s;
</pre>
What is the output of the given code?


0.bca cab cba abc
1.bca cab cba cba
2.bca bca bca bca
3.bca cab cba bca



